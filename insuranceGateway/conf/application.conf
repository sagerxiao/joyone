# This is the main configuration file for the application.
dafakf
# ~~~~~
application.name=insuranceGateway
adfaf
# Application mode
# ~~~adfa~~
# Set to ffadev to enable instant reloading and other development help.
# Otherwise daset to prod.
application.mofdde=prod
%prod.applicatioafn.mode=prod
ads
# Sfaecret key
# ~~~~~
# Thed secret key is used to secure cryptographics functions
# If yfadou deploy your application to several instances be sure to use the same key !
applicatifaon.secret=Ovr6vLhxt8s0Nv2PgQvAwiafIeUx5SeqkDCtCiH0m2VbAnahtjtdcdEubx28PxB7
df
# afi18n
# ~~a~~~
# Defadfine locales used by your application.
# You caafn then place localized messages in conf/messages.{locale} files
# applicatadion.langs=fr,en,ja
fa
# dfDate format
# ~~adf~~~
date.foarmat=yyyy-MM-dd
# date.fdformat.fr=dd/MM/yyyy
a
#fda Server configuration
# ~~df~~~
# If yaou need to change the HTTP port, uncomment this (default is set to 9000)
# http.dfport=9000
#adf
# Bya default the server listen for HTTP on the wildcard address.
# Youdfa can restrict this.
# http.adfddress=127.0.0.1
#ad
# Ufase this if you don't host your Play application at the root of the domain
# youdf're serving it from. This parameter has no effect when deployed as a
# war, adfbecause the path will be handled by the application server.
# http.patah=/
df
# adfSession configuration
# ~~~a~~~~~~~~~~~~~~~~~~~
# By ddfaefault, session will be written to the transient PLAY_SESSION cookie.
# The coodfkies are not secured by default, only set it to true
# if you'rea serving your pages through https.
# applicatiodfn.session.cookie=PLAY
# application.adfsession.maxAge=1h
# application.sesasion.secure=false
df
# adSession/Cookie sharing between subdomain
# ~~fa~~~~~~~~~~~~~~~~~~~~
# By ddfefault a cookie is only valid for a specific domain. By setting
# applicaation.defaultCookieDomain to '.example.com', the cookies
# will bedf valid for all domains ending with '.example.com', ie:
# foo.exampale.com and bar.example.com
# applicatiodfan.defaultCookieDomain=.example.com
d
#fa JVM configuration
# ~f~~~~
# Deafine which port is used by JPDA when application is in debug mode (default is set to 8000)
jpda.dfport=8005
#adf
# Jaava source level => 1.6, 1.7 or 1.8 (experimental)
# javdfa.source=1.6
af
# aLog level
# ~dfa~~~~
# Specdify log level for your application.
# If yofau want a very customized log, create a log4j.properties file in the conf directory
# applicafdtion.log=INFO
#adf
# Moare logging configuration
# appdflication.log.path=/log4j.properties
# appliacation.log.system.out=off
dfa
# Ddfatabase configuration
# ~~~a~~ 
# Enabdfale a database engine if needed.
#df
# Tadfo quickly set up a development database, use either:
#   - amem : for a transient in memory database (H2 in memory)
#   - fdfs  : for a simple file written database (H2 file stored)
# db.defaadult=mem
#fa
# Tdfo connect to a local MySQL5 database, use:
# db.addefault=mysql://user:pwd@host/database
#fa
# Tdfo connect to a local PostgreSQL9 database, use:
# db=adpostgres://user:pwd@host/database
#fa
# Idff you need a full JDBC configuration use the following :
# db.addefault.url=jdbc:postgresql:database_name
db.drivfer=org.postgresql.Driver
# db.defdafault.user=root
# db.defauladt.pass=secret
#fa
# Cdfonnections pool configuration :
# db.adfdefault.pool.timeout=1000
# db.defaault.pool.maxSize=30
# db.defafault.pool.minSize=10
#df
# Iadf you want to reuse an existing Datasource from your application server, use:
# db.default=java:/comp/env/jdbc/myDatasource
#f
# adfWhen using an existing Datasource, it's sometimes needed to destroy it when
# the application is stopped. Depending on the datasource, you can define a
# genadferic "destroy" method :
# db.defadault.destroyMethod=close
fa
# dfJPA Configuration (Hibernate)
# ~~adf~~~
#a
# dfSpecify the custom JPA dialect to use here (default to guess):
jpa.addialect=org.hibernate.dialect.PostgreSQLDialect
#fa
# Sfdpecify the ddl generation pattern to use. Set to none to disable it 
# (deadfault to update in DEV mode, and none in PROD mode):
# jpa.dfaefault.ddl=update
jpa.ddl=ndfone
#adf
# Deabug SQL statements (logged using DEBUG level):
# jpadf.default.debugSQL=true
#adf
# Yoau can even specify additional hibernate properties here:
# defdfault.hibernate.use_sql_comments=true
# ...adf
#ad
# Sftore path for Blob content
attaafdchments.path=data/attachments
a
#f Memcached configuration
# adf~~~~~ 
# Enaable memcached if needed. Otherwise a local cache is used.
# memcdfached=enabled
#af
# Sadpecify memcached host (default to 127.0.0.1:11211)
# memfcached.host=127.0.0.1:11211
#adf
# Ora you can specify multiple host to build a distributed cache
# memfdcached.1.host=127.0.0.1:11211
# memcaadched.2.host=127.0.0.1:11212
#f
# adfUse plain SASL to authenticate for memcached
# memadcached.user=
# memcafached.password=
df
# aHTTP Response headers control for static files
# ~df~~~~
# Setad the default max-age, telling the user's browser how long it should cache the page.
# Defaufalt is 3600 (one hour). Set it to 0 to send no-cache.
# This isdf only read in prod mode, in dev mode the cache is disabled.
# http.cachadeControl=3600
f
#ad If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Dfefault is true, set it to false to deactivate use of entity tags.
# htadftp.useETag=true
a
#df Custom mime types
# maimetype.xpi=application/x-xpinstall
dfa
# WdfS configuration
# ~~~a~~
# Defafult engine is Async Http Client, uncomment to use
# the JafDK's internal implementation
# webservaice = urlfetch
# If you nfeed to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
#mail.smtp=mock

# Or, specify mail host configuration
# mail.smtp.host=127.0.0.1
# mail.smtp.user=admin
# mail.smtp.pass=
# mail.smtp.channel=ssl

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
# %test.application.baseUrl=http://localhost:9000/
# %prod.application.baseUrl=http://www.yourdomain.com/

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Netty pipeline configuration (advanced settings)
# You can default netty settings by overriding the following line. Each handler must be comma separated.
# The last value must be the PlayHandler class (or your own that extends PlayHandler)
# Default values are
# play.netty.pipeline = play.server.FlashPolicyHandler,org.jboss.netty.handler.codec.http.HttpRequestDecoder,play.server.StreamChunkAggregator,org.jboss.netty.handler.codec.http.HttpResponseEncoder,org.jboss.netty.handler.stream.ChunkedWriteHandler,play.server.PlayHandler
# For example, to enable Netty response compression
# play.netty.pipeline = play.server.FlashPolicyHandler,org.jboss.netty.handler.codec.http.HttpRequestDecoder,play.server.StreamChunkAggregator,org.jboss.netty.handler.codec.http.HttpResponseEncoder,org.jboss.netty.handler.codec.http.HttpContentCompressor,org.jboss.netty.handler.stream.ChunkedWriteHandler,play.server.PlayHandler
# For SSL, use the play.ssl.netty.pipeline property
# play.ssl.netty.pipeline = play.server.FlashPolicyHandler,org.jboss.netty.handler.codec.http.HttpRequestDecoder,play.server.StreamChunkAggregator,org.jboss.netty.handler.codec.http.HttpResponseEncoder,org.jboss.netty.handler.codec.http.HttpContentCompressor,org.jboss.netty.handler.stream.ChunkedWriteHandler,play.server.ssl.SslPlayHandler


# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# Testing. Set up a custom configuration for test mode
# ~~~~~

#一次请求数据条数最大值
req.orders.maxSize=10

#cws集群地址
cws.cluster.addr=

@include.multiEnv=applicationEnv.conf
@include.devEnv=applicationDev.conf
